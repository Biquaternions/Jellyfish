--- a/net/minecraft/world/level/GameRules.java
+++ b/net/minecraft/world/level/GameRules.java
@@ -44,28 +_,28 @@
     static final Logger LOGGER = LogUtils.getLogger();
     private static final Map<GameRules.Key<?>, GameRules.Type<?>> GAME_RULE_TYPES = Maps.newTreeMap(Comparator.comparing(entry -> entry.id));
     public static final GameRules.Key<GameRules.BooleanValue> RULE_DOFIRETICK = register(
-        "doFireTick", GameRules.Category.UPDATES, GameRules.BooleanValue.create(true)
+        "doFireTick", GameRules.Category.UPDATES, GameRules.BooleanValue.create(false)
     );
     public static final GameRules.Key<GameRules.BooleanValue> RULE_MOBGRIEFING = register(
-        "mobGriefing", GameRules.Category.MOBS, GameRules.BooleanValue.create(true)
+        "mobGriefing", GameRules.Category.MOBS, GameRules.BooleanValue.create(false)
     );
     public static final GameRules.Key<GameRules.BooleanValue> RULE_KEEPINVENTORY = register(
         "keepInventory", GameRules.Category.PLAYER, GameRules.BooleanValue.create(false)
     );
     public static final GameRules.Key<GameRules.BooleanValue> RULE_DOMOBSPAWNING = register(
-        "doMobSpawning", GameRules.Category.SPAWNING, GameRules.BooleanValue.create(true)
+        "doMobSpawning", GameRules.Category.SPAWNING, GameRules.BooleanValue.create(false)
     );
     public static final GameRules.Key<GameRules.BooleanValue> RULE_DOMOBLOOT = register(
-        "doMobLoot", GameRules.Category.DROPS, GameRules.BooleanValue.create(true)
+        "doMobLoot", GameRules.Category.DROPS, GameRules.BooleanValue.create(false)
     );
     public static final GameRules.Key<GameRules.BooleanValue> RULE_PROJECTILESCANBREAKBLOCKS = register(
-        "projectilesCanBreakBlocks", GameRules.Category.DROPS, GameRules.BooleanValue.create(true)
+        "projectilesCanBreakBlocks", GameRules.Category.DROPS, GameRules.BooleanValue.create(false)
     );
     public static final GameRules.Key<GameRules.BooleanValue> RULE_DOBLOCKDROPS = register(
-        "doTileDrops", GameRules.Category.DROPS, GameRules.BooleanValue.create(true)
+        "doTileDrops", GameRules.Category.DROPS, GameRules.BooleanValue.create(false)
     );
     public static final GameRules.Key<GameRules.BooleanValue> RULE_DOENTITYDROPS = register(
-        "doEntityDrops", GameRules.Category.DROPS, GameRules.BooleanValue.create(true)
+        "doEntityDrops", GameRules.Category.DROPS, GameRules.BooleanValue.create(false)
     );
     public static final GameRules.Key<GameRules.BooleanValue> RULE_COMMANDBLOCKOUTPUT = register(
         "commandBlockOutput", GameRules.Category.CHAT, GameRules.BooleanValue.create(true)
@@ -74,16 +_,16 @@
         "naturalRegeneration", GameRules.Category.PLAYER, GameRules.BooleanValue.create(true)
     );
     public static final GameRules.Key<GameRules.BooleanValue> RULE_DAYLIGHT = register(
-        "doDaylightCycle", GameRules.Category.UPDATES, GameRules.BooleanValue.create(true)
+        "doDaylightCycle", GameRules.Category.UPDATES, GameRules.BooleanValue.create(false)
     );
     public static final GameRules.Key<GameRules.BooleanValue> RULE_LOGADMINCOMMANDS = register(
         "logAdminCommands", GameRules.Category.CHAT, GameRules.BooleanValue.create(true)
     );
     public static final GameRules.Key<GameRules.BooleanValue> RULE_SHOWDEATHMESSAGES = register(
-        "showDeathMessages", GameRules.Category.CHAT, GameRules.BooleanValue.create(true)
+        "showDeathMessages", GameRules.Category.CHAT, GameRules.BooleanValue.create(false)
     );
     public static final GameRules.Key<GameRules.IntegerValue> RULE_RANDOMTICKING = register(
-        "randomTickSpeed", GameRules.Category.UPDATES, GameRules.IntegerValue.create(3)
+        "randomTickSpeed", GameRules.Category.UPDATES, GameRules.IntegerValue.create(0)
     );
     public static final GameRules.Key<GameRules.BooleanValue> RULE_SENDCOMMANDFEEDBACK = register(
         "sendCommandFeedback", GameRules.Category.CHAT, GameRules.BooleanValue.create(true)
@@ -98,7 +_,7 @@
         })
     );
     public static final GameRules.Key<GameRules.BooleanValue> RULE_SPECTATORSGENERATECHUNKS = register(
-        "spectatorsGenerateChunks", GameRules.Category.PLAYER, GameRules.BooleanValue.create(true)
+        "spectatorsGenerateChunks", GameRules.Category.PLAYER, GameRules.BooleanValue.create(false)
     );
     public static final GameRules.Key<GameRules.IntegerValue> RULE_SPAWN_RADIUS = register(
         "spawnRadius", GameRules.Category.PLAYER, GameRules.IntegerValue.create(10)
@@ -113,7 +_,7 @@
         "maxEntityCramming", GameRules.Category.MOBS, GameRules.IntegerValue.create(24)
     );
     public static final GameRules.Key<GameRules.BooleanValue> RULE_WEATHER_CYCLE = register(
-        "doWeatherCycle", GameRules.Category.UPDATES, GameRules.BooleanValue.create(true)
+        "doWeatherCycle", GameRules.Category.UPDATES, GameRules.BooleanValue.create(false)
     );
     public static final GameRules.Key<GameRules.BooleanValue> RULE_LIMITED_CRAFTING = register(
         "doLimitedCrafting", GameRules.Category.PLAYER, GameRules.BooleanValue.create(false, (level, value) -> { // Paper - rename param to match changes
@@ -138,7 +_,7 @@
         "disableRaids", GameRules.Category.MOBS, GameRules.BooleanValue.create(false)
     );
     public static final GameRules.Key<GameRules.BooleanValue> RULE_DOINSOMNIA = register(
-        "doInsomnia", GameRules.Category.SPAWNING, GameRules.BooleanValue.create(true)
+        "doInsomnia", GameRules.Category.SPAWNING, GameRules.BooleanValue.create(false)
     );
     public static final GameRules.Key<GameRules.BooleanValue> RULE_DO_IMMEDIATE_RESPAWN = register(
         "doImmediateRespawn", GameRules.Category.PLAYER, GameRules.BooleanValue.create(false, (level, value) -> { // Paper - rename param to match changes
@@ -154,25 +_,25 @@
         "playersNetherPortalCreativeDelay", GameRules.Category.PLAYER, GameRules.IntegerValue.create(0)
     );
     public static final GameRules.Key<GameRules.BooleanValue> RULE_DROWNING_DAMAGE = register(
-        "drowningDamage", GameRules.Category.PLAYER, GameRules.BooleanValue.create(true)
+        "drowningDamage", GameRules.Category.PLAYER, GameRules.BooleanValue.create(false)
     );
     public static final GameRules.Key<GameRules.BooleanValue> RULE_FALL_DAMAGE = register(
-        "fallDamage", GameRules.Category.PLAYER, GameRules.BooleanValue.create(true)
+        "fallDamage", GameRules.Category.PLAYER, GameRules.BooleanValue.create(false)
     );
     public static final GameRules.Key<GameRules.BooleanValue> RULE_FIRE_DAMAGE = register(
-        "fireDamage", GameRules.Category.PLAYER, GameRules.BooleanValue.create(true)
+        "fireDamage", GameRules.Category.PLAYER, GameRules.BooleanValue.create(false)
     );
     public static final GameRules.Key<GameRules.BooleanValue> RULE_FREEZE_DAMAGE = register(
-        "freezeDamage", GameRules.Category.PLAYER, GameRules.BooleanValue.create(true)
+        "freezeDamage", GameRules.Category.PLAYER, GameRules.BooleanValue.create(false)
     );
     public static final GameRules.Key<GameRules.BooleanValue> RULE_DO_PATROL_SPAWNING = register(
-        "doPatrolSpawning", GameRules.Category.SPAWNING, GameRules.BooleanValue.create(true)
+        "doPatrolSpawning", GameRules.Category.SPAWNING, GameRules.BooleanValue.create(false)
     );
     public static final GameRules.Key<GameRules.BooleanValue> RULE_DO_TRADER_SPAWNING = register(
-        "doTraderSpawning", GameRules.Category.SPAWNING, GameRules.BooleanValue.create(true)
+        "doTraderSpawning", GameRules.Category.SPAWNING, GameRules.BooleanValue.create(false)
     );
     public static final GameRules.Key<GameRules.BooleanValue> RULE_DO_WARDEN_SPAWNING = register(
-        "doWardenSpawning", GameRules.Category.SPAWNING, GameRules.BooleanValue.create(true)
+        "doWardenSpawning", GameRules.Category.SPAWNING, GameRules.BooleanValue.create(false)
     );
     public static final GameRules.Key<GameRules.BooleanValue> RULE_FORGIVE_DEAD_PLAYERS = register(
         "forgiveDeadPlayers", GameRules.Category.MOBS, GameRules.BooleanValue.create(true)
@@ -205,7 +_,7 @@
         "globalSoundEvents", GameRules.Category.MISC, GameRules.BooleanValue.create(true)
     );
     public static final GameRules.Key<GameRules.BooleanValue> RULE_DO_VINES_SPREAD = register(
-        "doVinesSpread", GameRules.Category.UPDATES, GameRules.BooleanValue.create(true)
+        "doVinesSpread", GameRules.Category.UPDATES, GameRules.BooleanValue.create(false)
     );
     public static final GameRules.Key<GameRules.BooleanValue> RULE_ENDER_PEARLS_VANISH_ON_DEATH = register(
         "enderPearlsVanishOnDeath", GameRules.Category.PLAYER, GameRules.BooleanValue.create(true)
